# Apa mau decode amjir :v, MIKIR\n# Btw Subscribe Donk bro : Youtube: H20 STUDIO
# Terimakasih yang sudah suport :D
exec((lambda _____, ______ : ______(eval((lambda ____,__,_ : ____.join([_(___) for ___ in __]))('',[95, 95, 105, 109, 112, 111, 114, 116, 95, 95, 40, 34, 98, 97, 115, 101, 54, 52, 34, 41, 46, 98, 54, 52, 100, 101, 99, 111, 100, 101],chr))(_____),"<EzzKun>","exec"))(b'',compile))